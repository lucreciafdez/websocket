{"version":3,"sources":["StockFilas.jsx","StockLista.jsx","ExchangeFilas.jsx","ExchangeLista.jsx","css_grafico.js","Grafico.jsx","Pagina.jsx","App.js","serviceWorker.js","index.js"],"names":["StockFilas","getStockValueColor","stock","current_value","history","slice","value","this","props","stock_data","className","is_selected","id","stock_name","onClick","toggleStockSelection","bind","toUpperCase","company_name","country","toFixed","porcentaje","maximo","minimo","volume","React","Component","StockLista","areStocksLoaded","style","position","margin","width","Object","keys","stocks","map","index","current_stock","key","colSpan","ExchangeFilas","exchange_data","exchange_ticker","name","cantidad","buy","sell","participacion","ExchangeLista","areStocksLoaded_exchange","exchanges","exchange_name","current_exchange","toggleStockSelection_exchange","graficoConf","responsive","scales","xAxes","type","distribution","ticks","source","time","displayFormats","second","unit","scaleLabel","display","labelString","yAxes","beginAtZero","stepValue","steps","pan","enabled","mode","zoom","drag","chartColors","chartDataset","color","stock_values","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","Grafico","updateChart","chart","refs","chartInstance","length","datasets","update","chart_dataset","find","dataset","getStockValues","concat","splice","indexOf","componentDidUpdate","t","Date","y","resetZoom","options","ref","stocksUrl","Pagina","state","def_stocks","market_trend","undefined","connectionError","response","response2","response3","componentDidMount","socket","socketIOClient","path","emit","on","exchange","setState","saveNewStockValues","buyStocks","sellStocks","stocksTotal","listed_companies","nombre","ticker","event","hideSpinner","result","new_stocks","total","llave","key_s","key_e","up_values_count","down_values_count","Number","push","newMarketTrend","up_count","down_count","resetData","pop","new_exchanges","resetData_exchange","showSpinner","App","hasError","i","handleClick","error","info","console","log","isToggleOn","textAlign","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.73710203.chunk.js","sourcesContent":["import React from 'react'\nimport { Sparklines, SparklinesLine } from 'react-sparklines';\nimport TimeAgo from 'react-timeago'\n\nclass StockFilas extends React.Component {\n\n  getStockValueColor = (stock) =>{\n    if(stock.current_value < stock.history.slice(-2)[0].value){\n      return 'red';\n    }\n    else if(stock.current_value > stock.history.slice(-2)[0].value){\n      return 'green';\n    }\n    else{\n      return null;\n    }\n  }\n\n  render() {\n    let history = this.props.stock_data.history;\n    return (\n      <tr className={ this.props.stock_data.is_selected ? 'selected' : null } id={this.props.stock_name} onClick={this.props.toggleStockSelection.bind(this, this.props.stock_name)} >\n        <td>{this.props.stock_name.toUpperCase()}</td>\n        <td className='name'>\n          {this.props.stock_data.company_name}\n        </td>\n        <td className='country'>\n          {this.props.stock_data.country}\n        </td>\n        <td className={this.getStockValueColor(this.props.stock_data)}>\n          {this.props.stock_data.current_value.toFixed(2)}\n        </td>\n        <td className='porcentaje'>\n          {this.props.stock_data.porcentaje.toFixed(2)}\n        </td>\n        <td className='maximo'>\n          {this.props.stock_data.maximo.toFixed(2)}\n        </td>\n        <td className='minimo'>\n          {this.props.stock_data.minimo.toFixed(2)}\n        </td>\n        <td className='volume'>\n          {this.props.stock_data.volume}\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default StockFilas;\n","import React from 'react'\nimport { Detector } from \"react-detect-offline\";\nimport StockFilas from './StockFilas.jsx'\n\nconst StockLista = (props) => {\n  return (\n    <div className='card column' id='stocks_list'>\n      <div className='card-header'>\n        <div className='card-header-title'>\n          Stocks\n          &nbsp;\n          &nbsp;\n        </div>\n      </div>\n      <div className='card-header-texto'>\n      <div className='card-header-title-texto'>\n      A continuacion se muestran los stocks en el mercado, seleccione uno en la tabla para desplegarlo en el gráfico.\n      </div>\n      </div>\n      <div className='card-content'>\n        { props.areStocksLoaded() ? <p className='is-size-7'></p> : null }\n        <table style={{ position: \"relative\", margin: \"auto\",width: \"50vw\" }} className='table is-bordered'>\n          <thead>\n            <tr>\n              <th>Ticker</th>\n              <th>Nombre Empresa</th>\n              <th>Pais Origen</th>\n\n              <th>\n                Ultimo precio\n              </th>\n              <th>Variacion Porcentual</th>\n              <th>Alto Historico</th>\n              <th>Bajo Historico</th>\n              <th>Volumen Total Transado</th>\n\n\n            </tr>\n          </thead>\n          <tbody>\n            {Object.keys(props.stocks).map((stock_name, index) =>\n              {\n                let current_stock = props.stocks[stock_name];\n                return (\n                  <StockFilas\n                    key={index} stock_name={stock_name}\n                    stock_data={current_stock}\n                    toggleStockSelection={props.toggleStockSelection}\n                  />\n                )\n              }\n            )}\n            { props.areStocksLoaded() ? null : <tr><td colSpan='4'>No se han cargado stocks</td></tr> }\n          </tbody>\n        </table>\n       </div>\n    </div>\n\n  );\n}\n\nexport default StockLista;\n","import React from 'react'\nimport { Sparklines, SparklinesLine } from 'react-sparklines';\n//import TimeAgo from 'react-timeago'\n\nclass ExchangeFilas extends React.Component {\n\n  render() {\n    return (\n      <tr >\n        <td className='exchange-ticker'>\n          {this.props.exchange_data.exchange_ticker}\n        </td>\n\n        <td className='name'>\n          {this.props.exchange_data.name}\n        </td>\n        <td className='cantidad'>\n          {this.props.exchange_data.cantidad}\n        </td>\n        <td className='buy'>\n          {this.props.exchange_data.buy}\n        </td>\n\n        <td className='sell'>\n          {this.props.exchange_data.sell}\n        </td>\n\n        <td className='volume'>\n          {this.props.exchange_data.volume}\n        </td>\n\n        <td className='participacion'>\n          {this.props.exchange_data.participacion.toFixed(2)}\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default ExchangeFilas;\n","import React from 'react'\nimport { Detector } from \"react-detect-offline\";\nimport ExchangeFilas from './ExchangeFilas.jsx'\n\nconst ExchangeLista = (props) => {\n  return (\n    <div className='card column' id='exchange_list'>\n      <div className='card-header'>\n        <div className='card-header-title'>\n          Exchanges\n          &nbsp;\n          &nbsp;\n        </div>\n      </div>\n      <div className='card-header-texto'>\n      <div className='card-header-title-texto'>\n      A continuacion se muestran los exchanges, mostrando los valores totales hasta el momento.\n      </div>\n      </div>\n\n      <div className='card-content'>\n        { props.areStocksLoaded_exchange() ? <p className='is-size-7'></p> : null }\n        <table className='table is-bordered'>\n          <thead>\n            <tr>\n            <th>Exchange Tiker</th>\n            <th>Nombre</th>\n            <th>Cantidad de Acciones</th>\n            <th>Volumen de Compra</th>\n            <th>Volumen de Venta</th>\n            <th>Volumen Total</th>\n            <th>Participacion de Mercado</th>\n\n\n            </tr>\n          </thead>\n          <tbody>\n            {Object.keys(props.exchanges).map((exchange_name, index) =>\n              {\n                let current_exchange = props.exchanges[exchange_name];\n                return (\n                  <ExchangeFilas\n                    key={index} exchange_name={exchange_name}\n                    exchange_data={current_exchange}\n                    toggleStockSelection_exchange={props.toggleStockSelection_exchange}\n                  />\n                )\n              }\n            )}\n            { props.areStocksLoaded_exchange() ? null : <tr><td colSpan='4'>No se han cargado exchanges</td></tr> }\n          </tbody>\n        </table>\n       </div>\n    </div>\n  );\n}\n\nexport default ExchangeLista;\n","export const graficoConf = {\n  responsive: true,\n  scales: {\n    xAxes: [{\n      type: 'time',\n      distribution: 'linear',\n      ticks: {\n        source: 'auto'\n      },\n      time: {\n        displayFormats: {second: 'h:mm:ss a'},\n        unit: 'second'\n      },\n      scaleLabel: {\n        display: true,\n        labelString: 'Tiempo'\n      }\n    }],\n    yAxes: [{\n      ticks: {\n        beginAtZero: true,\n        stepValue: 10,\n        steps: 10\n      },\n      scaleLabel: {\n        display: true,\n        labelString: 'Valor'\n      }\n    }]\n  },\n  pan: {\n    enabled: true,\n    mode: 'x'\n  },\n  zoom: {\n    enabled: true,\n    drag: false,\n    mode: 'x'\n  }\n};\n\n\nexport const chartColors = [\"#ba55d3\", \"#9acd32\", \"#40e0d0\", \"#6495ed\", \"#f08080\", \"#ffa500\", \"#663399\", \"#b22222\", \"#5f9ea0\", \"#8b008b\", \"#8b4513\", \"#f4a460\", \"#2e8b57\", \"#dda0dd\", \"rgb(0, 150, 136)\", \"rgb(255, 193, 7)\", \"rgb(96, 125, 139)\", \"rgb(33, 33, 33)\", \"rgb(169, 4, 4)\", \"rgb(1, 74, 64)\", \"rgb(179, 3, 72)\", \"rgb(84, 58, 68)\"];\n\nexport const chartDataset = (stock_name, color, stock_values) => {\n  return {\n    label: stock_name.toUpperCase(),\n    fill: false,\n    lineTension: 0,\n    backgroundColor: color,\n    borderColor: color,\n    borderCapStyle: 'butt',\n    borderJoinStyle: 'miter',\n    pointBorderColor: color,\n    pointBackgroundColor: '#fff',\n    pointBorderWidth: 1,\n    pointHoverRadius: 5,\n    pointHoverBackgroundColor: color,\n    pointHoverBorderColor: color,\n    pointHoverBorderWidth: 2,\n    pointRadius: 3,\n    pointHitRadius: 10,\n    data: stock_values\n  };\n};\n","import React from 'react'\nimport {Line} from 'react-chartjs-2';\nimport * as zoom from 'chartjs-plugin-zoom'\nimport { graficoConf, chartColors, chartDataset } from './css_grafico.js'\n\nclass Grafico extends React.Component {\n\n  updateChart = () => {\n    let chart = this.refs.chart.chartInstance;\n\n    if(Object.keys(this.props.stocks).length === 0)\n    {\n      chart.data.datasets = [];\n      return chart.update();\n    }\n\n    Object.keys(this.props.stocks).map((stock_name, index) =>\n    {\n      let current_stock = this.props.stocks[stock_name];\n      let chart_dataset = chart.data.datasets.find((dataset) => {\n        return dataset.label === stock_name.toUpperCase()\n      });\n\n      if(current_stock.is_selected)\n      {\n        let current_stock = this.props.stocks[stock_name];\n        if(chart_dataset)\n        {\n          chart_dataset.data = this.getStockValues(current_stock);\n        }\n        else\n        {\n          if(current_stock)\n          {\n            chart.data.datasets = chart.data.datasets.concat(\n              [\n                chartDataset(stock_name, chartColors[index], this.getStockValues(current_stock))\n              ]\n            )\n          }\n        }\n      }\n      else\n      {\n        if(chart_dataset)\n        {\n          // remove the dataset from graph\n          chart.data.datasets.splice(chart.data.datasets.indexOf(chart_dataset), 1);\n        }\n      }\n      chart.update();\n    })\n  }\n\n  componentDidUpdate = () => {\n    this.updateChart();\n  }\n\n  getStockValues = (stock) =>{\n    return stock.history.map((history) => {\n      return {t: new Date(history.time), y: history.value};\n    })\n  }\n\n  resetZoom = () => {\n    this.refs.chart.chartInstance.resetZoom();\n  }\n\n  render() {\n    return (\n      <div className={'card column'} >\n        <div className='card-header'>\n          <div className='card-header-title'>\n            Gráfico Stocks\n          </div>\n        </div>\n        <div className='card-header-texto'>\n        <div className='card-header-title-texto'>\n        Puede hacer zoom al gráfico y resetearlo con el botón a continuación\n        </div>\n        <button className=\"boton-r is-small \" onClick={this.resetZoom}>REINICIAR ZOOM</button>\n\n        </div>\n        <div className='card-content'>\n          <Line\n            data={{datasets: []}}\n            options={graficoConf}\n            ref='chart'\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Grafico;\n","import React from 'react'\nimport * as bulma from \"reactbulma\";\nimport StockLista from \"./StockLista.jsx\";\nimport ExchangeLista from \"./ExchangeLista.jsx\";\nimport Grafico from \"./Grafico.jsx\";\nimport socketIOClient from \"socket.io-client/dist/socket.io\";\n\nconst stocksUrl = 'wss://le-18262636.bitzonte.com';\n\nclass Pagina extends React.Component {\n\n  state = {\n   stocks: {},\n   def_stocks: {},\n   exchanges: {},\n   market_trend: undefined,\n   connectionError: false,\n   response: false,\n   response2:false,\n   response3:false\n  }\n\n  componentDidMount = () => {\n    const socket = socketIOClient(stocksUrl, {path: \"/stocks\"});\n    socket.emit(\"EXCHANGES\", (data) => {});\n    socket.on(\"EXCHANGES\", (data) => {\n      this.exchange(data);\n    });\n    socket.on(\"UPDATE\", data => this.setState({ response: data }));\n    socket.on(\"UPDATE\", this.saveNewStockValues);\n    socket.on(\"BUY\", data => this.setState({ response2: data }));\n    socket.on(\"BUY\", this.buyStocks);\n    socket.on(\"SELL\", data => this.setState({ response3: data }));\n    socket.on(\"SELL\", this.sellStocks);\n    socket.emit(\"STOCKS\", (data) => {});\n    socket.on(\"STOCKS\", (data) => {\n      this.stocksTotal(data);\n    });\n  }\n\n  exchange = (data) => {\n    //console.log(data)\n    for (const key of Object.keys(data)){\n\n      //console.log(data[key].name)\n      if(this.state.exchanges[key]){\n      this.state.exchanges[key].exchange_ticker = data[key].exchange_ticker\n      this.state.exchanges[key].name = data[key].name\n      this.state.exchanges[key].listed_companies = data[key].listed_companies\n      this.state.exchanges[key].cantidad = Object(data[key].listed_companies).length\n    }else{\n      this.state.exchanges[key] = {name: data[key].name, exchange_ticker:\n        data[key].exchange_ticker, listed_companies: data[key].listed_companies,\n        cantidad: Object(data[key].listed_companies).length, buy: 0, volume: 0,\n        sell: 0, participacion: 0}\n    }\n  }\n    this.setState({exchanges: this.state.exchanges})\n  }\n\n\n  stocksTotal = (data) =>{\n    for (const nombre of Object(data)){\n      this.state.def_stocks[nombre.ticker] = {company_name:nombre.company_name, country: nombre.country}\n  }\n  this.setState({def_stocks: this.state.def_stocks})\n  }\n\n  sellStocks = (event) => {\n    this.props.hideSpinner();\n    const { response3 } = this.state;\n    let result = this.state.response3;\n    let new_stocks = this.state.stocks\n    if(this.state.stocks[result.ticker])\n    {\n      new_stocks[result.ticker].volume += result.volume\n      new_stocks[result.ticker].sell += result.volume\n      this.setState({stocks: new_stocks})\n    }\n\n    var total = 0;\n    for (const llave of Object.keys(this.state.exchanges)){\n      total += this.state.exchanges[llave].volume\n    }\n\n    for (const key_s of Object.keys(this.state.def_stocks)){\n      for (const key_e of Object.keys(this.state.exchanges)){\n        for (const nombre of Object(this.state.exchanges[key_e].listed_companies))\n      if(this.state.def_stocks[key_s].company_name == nombre){\n        this.state.exchanges[key_e].sell += result.volume\n        this.state.exchanges[key_e].volume += result.volume\n        this.state.exchanges[key_e].participacion = this.state.exchanges[key_e].volume/ total\n      }}\n    }\n\n    this.setState({exchanges: this.state.exchanges})\n  }\n\n  buyStocks = (event) => {\n    this.props.hideSpinner();\n    const { response2 } = this.state;\n    let result = this.state.response2;\n    let new_stocks = this.state.stocks\n    if(this.state.stocks[result.ticker])\n    {\n      new_stocks[result.ticker].volume += result.volume\n      new_stocks[result.ticker].buy += result.volume\n      this.setState({stocks: new_stocks})\n    }\n\n    var total = 0;\n    for (const llave of Object.keys(this.state.exchanges)){\n      total += this.state.exchanges[llave].volume\n    }\n\n    for (const key_s of Object.keys(this.state.def_stocks)){\n      for (const key_e of Object.keys(this.state.exchanges)){\n        for (const nombre of Object(this.state.exchanges[key_e].listed_companies))\n      if(this.state.def_stocks[key_s].company_name == nombre){\n        this.state.exchanges[key_e].buy += result.volume\n        this.state.exchanges[key_e].volume += result.volume\n        this.state.exchanges[key_e].participacion = this.state.exchanges[key_e].volume/ total\n\n      }}\n    }\n    this.setState({exchanges: this.state.exchanges})\n  }\n\n  saveNewStockValues = (event) => {\n    this.props.hideSpinner();\n    const { response } = this.state;\n    let result = this.state.response;\n    let [up_values_count, down_values_count] = [0, 0];\n    let new_stocks = this.state.stocks\n\n    if(this.state.stocks[result.ticker])\n    {\n      new_stocks[result.ticker].current_value > Number(result.value) ? up_values_count++ : down_values_count++;\n      new_stocks[result.ticker].porcentaje = ((Number(result.value) - new_stocks[result.ticker].current_value) / new_stocks[result.ticker].current_value ) * 100\n      new_stocks[result.ticker].current_value = Number(result.value)\n      if (new_stocks[result.ticker].maximo < Number(result.value) ){\n        new_stocks[result.ticker].maximo = Number(result.value)\n      }\n      if (new_stocks[result.ticker].minimo > Number(result.value) ){\n        new_stocks[result.ticker].minimo = Number(result.value)\n      }\n      new_stocks[result.ticker].history.push({time: result.time, value: Number(result.value)})\n    }\n    else\n    {\n      new_stocks[result.ticker] = {ticker: result.ticker, current_value: result.value,\n        history: [{time: result.time, value: Number(result.value)}],\n        porcentaje: ((Number(result.value) - result.current_value) /\n        result.current_value ) * 100,  maximo: result.value,\n        minimo: result.value, volume:0, sell: 0, buy:0, company_name:'', country: '' ,is_selected: false }\n    }\n    for (var key of Object.keys(this.state.def_stocks)){\n      if(key = result.ticker){\n        new_stocks[result.ticker].company_name = this.state.def_stocks[key].company_name\n        new_stocks[result.ticker].country = this.state.def_stocks[key].country\n      }\n    }\n    this.setState({stocks: new_stocks, market_trend: this.newMarketTrend(up_values_count, down_values_count)})\n  }\n\n  newMarketTrend = (up_count, down_count) => {\n    if(up_count === down_count) return undefined;\n    return up_count > down_count ? 'up' : 'down'\n  }\n\n  toggleStockSelection = (stock_name) => {\n    let new_stocks = this.state.stocks;\n    new_stocks[stock_name].is_selected = !new_stocks[stock_name].is_selected\n    this.setState({ stocks: new_stocks })\n  }\n\n  resetData = () => {\n    let new_stocks = this.state.stocks;\n    Object.keys(this.state.stocks).map((stock_name, index) =>\n    {\n      new_stocks[stock_name].history = [new_stocks[stock_name].history.pop()];\n    });\n    this.setState({ stocks: new_stocks });\n  }\n\n  areStocksLoaded = () => {\n    return Object.keys(this.state.stocks).length > 0;\n  }\n\n  toggleStockSelection_exchange = (exchange_name) => {\n    let new_exchanges = this.state.exchanges;\n    new_exchanges[exchange_name].is_selected = !new_exchanges[exchange_name].is_selected\n    this.setState({ exchanges: new_exchanges })\n  }\n\n  resetData_exchange = () => {\n    let new_exchanges = this.state.exchanges;\n    this.setState({ exchanges: new_exchanges });\n  }\n\n  areStocksLoaded_exchange = () => {\n    return Object.keys(this.state.exchanges).length > 0;\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='rows'>\n        <div className='columns'>\n          <StockLista\n            stocks={this.state.stocks}\n            toggleStockSelection={this.toggleStockSelection}\n            resetData={this.resetData}\n            market_trend={this.state.market_trend}\n            areStocksLoaded={this.areStocksLoaded}\n          />\n        <Grafico stocks={this.state.stocks} />\n        </div>\n\n        <ExchangeLista\n          exchanges={this.state.exchanges}\n          toggleStockSelection_exchange={this.toggleStockSelection_exchange}\n          resetData_exchange={this.resetData_exchange}\n          areStocksLoaded_exchange={this.areStocksLoaded_exchange}\n        />\n        </div>\n\n\n        <div className={ this.props.showSpinner ? 'modal is-active' : 'modal' }>\n          <div className=\"modal-background\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Pagina;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Pagina from './Pagina.jsx'\n\nclass App extends Component {\n  constructor(){\n    super();\n    this.handleClick = this.handleClick.bind(this);\n    this.i = 0\n  }\n\n  state = {\n    hasError: false,\n    showSpinner: true,\n    i: 0,\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, info) {\n    console.log(error, info);\n  }\n\n  hideSpinner = () => {\n    this.setState({showSpinner: false});\n  }\n\n  handleClick() {\n  this.setState(state => ({\n    isToggleOn: !state.isToggleOn\n    }));\n  }\n\n  render() {\n  if (this.i ===0){\n    this.handleClick()\n    this.i += 1\n\n    return (\n      <div style={{ textAlign: \"center\"}}>\n\n      <div className=\"App\">\n      <div className='card-header-bienv'>\n        <div className='card-header-title-bienv'>\n          Bienvenido a Stocks y Exchange\n        </div>\n      </div>\n      <button className=\"boton\" onClick={this.handleClick} >\n          {this.state.isToggleOn ? 'DESCONECTAR' : 'CONECTAR'}\n        </button>\n        <Pagina hideSpinner={this.hideSpinner} showSpinner={this.state.showSpinner} />\n      </div>\n      </div>\n\n    );\n  }\n  else if(this.state.isToggleOn){\n    return (\n      <div style={{ textAlign: \"center\"}}>\n\n      <div className=\"App\">\n      <div className='card-header-bienv'>\n        <div className='card-header-title-bienv'>\n          Bienvenido a Stocks y Exchange\n        </div>\n      </div>\n      <button className=\"boton\" onClick={this.handleClick} >\n          {this.state.isToggleOn ? 'DESCONECTAR' : 'CONECTAR'}\n        </button>\n        <Pagina hideSpinner={this.hideSpinner} showSpinner={this.state.showSpinner} />\n      </div>\n      </div>\n\n    );\n  }else{\n      return (\n          <div style={{ textAlign: \"center\"}}>\n          <p>Debe conectarse al socket</p>\n\n          <button className=\"boton\" onClick={this.handleClick} >\n            {this.state.isToggleOn ? 'DESCONECTAR' : 'CONECTAR'}\n          </button>\n        </div>);\n    }\n\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}